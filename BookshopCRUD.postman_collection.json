{
	"info": {
		"_postman_id": "c23410c4-0332-4b8c-a345-56b6e130eeb2",
		"name": "BookshopCRUD",
		"description": "# üöÄ Get started here\n\nThis template guides you through CRUD operations (GET, POST, PUT, DELETE), variables, and tests.\n\n## üîñ **How to use this template**\n\n#### **Step 1: Send requests**\n\nRESTful APIs allow you to perform CRUD operations using the POST, GET, PUT, and DELETE HTTP methods.\n\nThis collection contains each of these request types. Open each request and click \"Send\" to see what happens.\n\n#### **Step 2: View responses**\n\nObserve the response tab for status code (200 OK), response time, and size.\n\n#### **Step 3: Send new Body data**\n\nUpdate or add new data in \"Body\" in the POST request. Typically, Body data is also used in PUT request.\n\n```\n{\n    \"name\": \"Add your name in the body\"\n}\n\n```\n\n#### **Step 4: Update the variable**\n\nVariables enable you to store and reuse values in Postman. We have created a variable called `base_url` with the sample request [https://postman-api-learner.glitch.me](https://postman-api-learner.glitch.me). Replace it with your API endpoint to customize this collection.\n\n#### **Step 5: Add tests in the \"Tests\" tab**\n\nTests help you confirm that your API is working as expected. You can write test scripts in JavaScript and view the output in the \"Test Results\" tab.\n\n<img src=\"https://content.pstmn.io/b5f280a7-4b09-48ec-857f-0a7ed99d7ef8/U2NyZWVuc2hvdCAyMDIzLTAzLTI3IGF0IDkuNDcuMjggUE0ucG5n\">\n\n## üí™ Pro tips\n\n- Use folders to group related requests and organize the collection.\n- Add more scripts in \"Tests\" to verify if the API works as expected and execute flows.\n    \n\n## ‚ÑπÔ∏è Resources\n\n[Building requests](https://learning.postman.com/docs/sending-requests/requests/)  \n[Authorizing requests](https://learning.postman.com/docs/sending-requests/authorization/)  \n[Using variables](https://learning.postman.com/docs/sending-requests/variables/)  \n[Managing environments](https://learning.postman.com/docs/sending-requests/managing-environments/)  \n[Writing scripts](https://learning.postman.com/docs/writing-scripts/intro-to-scripts/)",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "30568032"
	},
	"item": [
		{
			"name": "http://localhost:8080/books",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books"
					]
				},
				"description": "Obtiene la lista de libros."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/create",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"isbn\" : 9500301245,\r\n    \"title\" : \"Los arboles mueren de pie\",\r\n    \"year\" : 1964,\r\n    \"copy\" : 14,\r\n    \"borrowedCopy\" : 5,\r\n    \"remainingCopy\" : 9,\r\n    \"registered\" : 1,\r\n    \"author\" : {\r\n        \"id\" : 3\r\n    } ,\r\n    \"publisher\" : {\r\n        \"id\" : 1\r\n    }\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/books/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"create"
					]
				},
				"description": "Agrega libros a la base de datos."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/{id}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"11"
					]
				},
				"description": "Devuelve libro por id."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/update",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 11,\r\n    \"isbn\": 5446885464646,\r\n    \"title\": \"Escribir con humor\",\r\n    \"year\": 1950,\r\n    \"copy\": 14,\r\n    \"borrowedCopy\": 5,\r\n    \"remainingCopy\": 9,\r\n    \"registered\": true,\r\n    \"author\": {\r\n        \"id\": 2,\r\n        \"name\": \"King\",\r\n        \"registered\": true\r\n    },\r\n    \"publisher\": null\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/books/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"update"
					]
				},
				"description": "Actualiza info de un libro."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/borrow/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books/borrow/",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"borrow",
						""
					]
				},
				"description": "Presta un libro por id. Resta y suma libros en stock y libros prestados."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/return/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books/return/15",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"return",
						"15"
					]
				},
				"description": "Obtiene un libro que habia sido prestado por id. Resta y Suma libros prestados y libros en stock."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/inStock/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books/inStock/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"inStock",
						"11"
					]
				},
				"description": "Da de alta un libro por id. (estado=true)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/outStock/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books/outStock/15",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"outStock",
						"15"
					]
				},
				"description": "Da de baja un libro por id. (estado=false)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/books/delete/11",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/books/delete/11",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"books",
						"delete",
						"11"
					]
				},
				"description": "Borra libro por id."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/authors",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors"
					]
				},
				"description": "Obtiene una lista de los Autores registrados."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors/create",
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "title",
						"value": "optio molestias id quia eum",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Jos√© Saramago \",\r\n\t\"registered\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/authors/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors",
						"create"
					]
				},
				"description": "Agrega un nuevo Autor a la lista de autores."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors/{id}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/authors/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors",
						"3"
					]
				},
				"description": "Devuelve un autor por id."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors/update",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"K\",\r\n    \"registered\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/authors/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors",
						"update"
					]
				},
				"description": "Actualiza info de un autor."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors/register/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/authors/register/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors",
						"register",
						"2"
					]
				},
				"description": "Da de alta un autor por id.(estado=true)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors/remove/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/authors/remove/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors",
						"remove",
						"2"
					]
				},
				"description": "Da de baja un autor. (estado=false)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/authors/delete/{id}",
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 2,\r\n    \"name\": \"K\",\r\n    \"registered\": true\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/authors/delete/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"authors",
						"delete",
						"2"
					]
				},
				"description": "Elimina un autor por id."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher/create",
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"name\": \"Planeta\",\r\n    \"registered\": true\r\n\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/publisher/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher",
						"create"
					]
				},
				"description": "Agrega una editorial a la lista editoriales."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/publisher",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher"
					]
				},
				"description": "Obtiene la lista editoriales."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher/{id}",
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/publisher/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher",
						"1"
					]
				},
				"description": "Devuelve Editorial por id."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher/update",
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\r\n    \"id\": 1,\r\n    \"name\": \"Losada\",\r\n    \"registered\": false\r\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/publisher/update",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher",
						"update"
					]
				},
				"description": "Actualiza una editorial por id."
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher/register/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/publisher/register/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher",
						"register",
						"1"
					]
				},
				"description": "Da de alta una editorial. (estado=true)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher/remove/{id}",
			"request": {
				"method": "PUT",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/publisher/remove/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher",
						"remove",
						"1"
					]
				},
				"description": "Da de baja una editorial. (estado=false)"
			},
			"response": []
		},
		{
			"name": "http://localhost:8080/publisher/delete/{id}",
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/publisher/delete/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"publisher",
						"delete",
						"3"
					]
				},
				"description": "Elimina una editorial."
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "id",
			"value": "1"
		},
		{
			"key": "base_url",
			"value": "https://postman-rest-api-learner.glitch.me/"
		}
	]
}